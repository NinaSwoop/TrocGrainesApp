name: Deploy to VPS

on:
  push:
    branches:
      - main
permissions:
  contents: read
  pull-requests: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install dependencies
        run: |
          cd frontend
          npm install
          cd ../backend
          composer install

      - name: Run tests
        run: |
          cd backend
          ./vendor/bin/phpunit tests

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/production.Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/trocgrainesapp_backend:latest
          no-cache: true

      - name: SSH to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_HOST_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 59650
          script: |
            # Vérifier l'état du serveur
            echo "Vérification de l'état du serveur"
            docker ps -a

            # Vérifier si le fichier compose.production.yaml existe
            if [ -f /home/ubuntu/TrocGrainesApp/compose.production.yaml ]; then
              echo "Le fichier compose.production.yaml existe"
            else
              echo "Le fichier compose.production.yaml est manquant"
              exit 1
            fi

            # Lancer les conteneurs avec Docker Compose
            docker compose -f /home/ubuntu/TrocGrainesApp/compose.production.yaml up -d