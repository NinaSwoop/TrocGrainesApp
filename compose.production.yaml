services:
  frontend:
    image: node:20-alpine
    container_name: frontend
    working_dir: /app/frontend
    command: sh -c "npm install && npm run build"
    ports:
      - "5173:5173"
    depends_on:
      - backend
    restart: always

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: production.Dockerfile
    volumes:
      - ./backend:/app/backend
    working_dir: /app/backend
    ports:
      - "8000:8000"
    secrets:
      - db_url
    environment:
      DATABASE_URL_FILE: /run/secrets/db_url
      APP_ENV: prod
      LOG_LEVEL: error
    depends_on:
      - db
    restart: always

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend/public:/app/backend/public
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend

  db:
    image: postgres:15
    container_name: db
    restart: always
    ports:
      - "5432:5432"
    secrets:
      - db_password
      - db_user
      - db_name
    environment:
      POSTGRES_USER_FILE: /run/secrets/db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB_FILE: /run/secrets/db_name
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data

  adminer:
    image: dockette/adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - db

secrets:
  db_password:
    file: ./secrets/db_password.secret
  db_name:
    file: ./secrets/db_name.secret
  db_user:
    file: ./secrets/db_user.secret
  db_url:
    file: ./secrets/db_url.secret




